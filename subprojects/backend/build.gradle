/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Administrator' at '17-1-3 上午9:15' with Gradle 3.2.1
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.2.1/userguide/tutorial_java_projects.html
 */
// 添加Gradle插件
plugins {
    id "org.springframework.boot" version "1.4.3.RELEASE"
}
apply plugin: 'war'
apply from: "${gradleDir}/java.gradle"
apply plugin: 'eclipse-wtp'


description = 'J2EE Web项目 - 后台工程'


configurations {
    dev
    compile.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat' // 不使用内嵌的Tomcat
}


// In this section you declare the dependencies for your production and test code
dependencies {
    compile project(":frontend") // 把前台工程依赖进来，这样就会自动的先构建前台的文件打成jar包。

    // spring-mvc，支持 Web 应用开发，这里不使用内嵌的Tomcat
    compile("org.springframework.boot:spring-boot-starter-web")
    providedCompile("org.springframework.boot:spring-boot-starter-tomcat")
    providedCompile("org.apache.tomcat:servlet-api:6.0.45")
    compile("org.springframework.boot:spring-boot-starter-security")
    // 用于生成spring-configuration-metadata.json文件
    compile("org.springframework.boot:spring-boot-configuration-processor")

    // mybatis (数据库持久层)
    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.1.1")
    // druid (数据库连接池)
    compile "com.alibaba:druid:1.0.26"
    // MySQL
    runtime('mysql:mysql-connector-java')

    // Redis缓存
    compile "redis.clients:jedis:2.4.0"
    compile "org.springframework.boot:spring-boot-starter-redis"

    // 代码生成
    compile "org.codehaus.groovy:groovy-all:2.4.7"
    compile "commons-io:commons-io:2.5"

    // 添加适用于生产环境的功能，如性能指标和监测等功能
    runtime("org.springframework.boot:spring-boot-starter-actuator")

    // testing
    testCompile("org.springframework.boot:spring-boot-starter-test")

    // spring dev tools
    dev("org.springframework.boot:spring-boot-devtools")
}


// run spring boot app
bootRun {
    //addResources = true
    classpath = sourceSets.main.runtimeClasspath + configurations.dev
}

// run all task
task runAll {
    description 'Run all task'
    dependsOn bootRun
}